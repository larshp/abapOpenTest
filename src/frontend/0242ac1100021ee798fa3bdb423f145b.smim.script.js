import {REST} from './rest.js';
import {Router} from './router.js';

export const base = '/sap/zabapopentest';

export class StartPage {
  renderList(list) {
    let result = "";
    for(let project of list) {
      result = result + 
        "<div>" + 
        "Name: " + Router.link("projects/" + project.NAME, project.NAME) + "<br>" +
        "Package: " + project.DEVCLASS + "<br>" +
        Router.link("projects/" + project.NAME + "/runner", "autorunner") + 
        "</div>"
    }
    if(list.length === 0) {
      alert("project list empty");
    }
    return result;
  }

  render() {
    return "<h1>abapOpenTest</h1>" + 
      REST.listProjects(this.renderList) + 
      "<br><a href=\"" + base + "/rest/swagger.html\">swagger</a>";
  }
}

export class NotFoundPage {
  render() {
    return "NotFoundPage<h1>404</h1>";
  }
}

export class AutorunnerPage {
  render() {
    return "<h1>Autorunner</h1>todo, reimplement";
  }
}

export class RunDetailsPage {
  constructor(project, run) {
    this.project = project;
    this.run = run;
  }

  renderObject(object) {
    let result = "<tr>"+
      "<td><b>" + object.OBJECT_NAME + "</b></td>" +
      "<td colspan='3'><b>" + object.OBJECT_TYPE + "</b> (runtime: " + object.RUNTIME + "ms)</td>"+
      "</tr>";

    for(let test of this.details.TESTS) {
      if (test.OBJECT_NAME === object.OBJECT_NAME && test.OBJECT_TYPE === object.OBJECT_TYPE) {
        let color = "red";
        if (test.KIND === "") {
          color = "green";
        }
        result = result + 
          "<tr><td></td>" +
          "<td>" + test.CLASS_NAME + "</td>" + 
          "<td>" + test.METHOD_NAME + "</td>" +
          "<td bgcolor='" + color + "'>" + test.KIND + "&nbsp;</td>" +
          "</tr>";
      }
    }

    return result;
  }

  renderDetails(details) {
    this.details = details;

    let result = "Start: " + details.RUN.START_TIME + "<br>" + 
      "End: " + details.RUN.END_TIME + "<br><br>";

    result = result + "todo, sorting<table>";
    for(let object of details.OBJECTS) {
      if (object.HAS_TESTS === "X") {
        result = result + this.renderObject(object);
      }
    }
    result = result + "</table>";

    return result;
  }

  render() {
    return "<h1>" + this.project + " - Run #" + this.run + "</h1>" +
      REST.runDetails(this.project, this.run, this.renderDetails.bind(this));
  }
}

export class ProjectPage {
  constructor(name) {
    this.name = name;
  }

  renderDetails(details) {
    return "Package: " + details.DEVCLASS + "<br>";
  }

  renderRuns(list) {
    let result = "List:<br>";

    for(let run of list) {
      result = result + 
        Router.link("projects/"+this.name+"/runs/"+run.RUN_NAME,"Run #" + run.RUN_NAME) + " " + 
        run.START_TIME + " " + 
        run.TESTS_SUCCESS + " " + 
        run.TESTS_FAILED + "<br>";
    }

    if (list.length === 0) {
      result = result + "empty";
    }

    return result;
  }

  render() {
    return "<h1>" + this.name + "</h1>" + 
      REST.projectDetails(this.name, this.renderDetails) + "<br>" +
      REST.listRuns(this.name, this.renderRuns.bind(this)) + "<br>" +
      "todo, latest runs, things changed<br>"+
      "todo, graph";
  }
}

Router.initialize();
Router.run();