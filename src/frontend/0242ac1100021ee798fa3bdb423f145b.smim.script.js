import {REST} from './rest.js';
import {Project} from './model.js';

export const base = '/sap/zabapopentest';

class Router {
  static initialize() {
    window.onpopstate = this.popstate;
    window.navigate = this.navigate;
  }

  static popstate(event) {
    Router.run();
  }

  static navigate(url) {
    history.pushState(null, null, base + "/" + url);
    Router.run();
  }

  static link(to, body) {
    return "<a href=\"#\" onclick=\"navigate('"+to+"');return false;\">"+body+"</a>";
  }

  static run() {
    if (!window.location.pathname.startsWith(base)) {
      throw "unknown url";
    }

    const path = window.location.pathname.substr(base.length);
    let page;

// todo, replace this with some kind of configuration
    if (path === "" || path === "/") {
      page = new StartPage();
    }

    let result = path.match(/\/projects\/(\w+)$/);
    if (result) {
      page = new ProjectPage(result[1]);
    }

    if (!page) {
      page = new NotFoundPage();
    }

    document.getElementById("app").innerHTML = this.renderHeader() + page.render() + this.renderFooter();
  }

  static renderHeader() {
    return "header<hr>";
  }

  static renderFooter() {
    return "<hr>footer";
  }
}

// ******************************************

class StartPage {
  renderList(list) {
    let result = "";
    for(let project of list) {
      result = result + 
        "<div>" + 
        "Name: " + Router.link("projects/" + project.NAME, project.NAME) + "<br>" +
        "Package: " + project.DEVCLASS +
        "</div>"
    }
    if(list.length === 0) {
      alert("project list empty");
    }
    return result;
  }

  render() {
    return "<h1>abapOpenTest</h1>" + 
      REST.listProjects(this.renderList) + 
      "<br><a href=\"" + base + "/rest/swagger.html\">swagger</a>";
  }
}

class NotFoundPage {
  render() {
    return "NotFoundPage<h1>404</h1>";
  }
}

class ProjectPage {
  constructor(name) {
    this.name = name;
  }

  renderDetails(details) {
    return "this is the details";
  }

  render() {
    return "<h1>" + this.name + "</h1>" + 
      REST.projectDetails(this.name, this.renderDetails);
  }
}

Router.initialize();
Router.run();