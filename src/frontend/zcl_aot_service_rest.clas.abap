class ZCL_AOT_SERVICE_REST definition
  public
  create public .

public section.

  interfaces ZIF_AOT_SERVICE .
  interfaces ZIF_SWAG_HANDLER .

  methods RUN_DETAILS
    importing
      !IV_PROJECT type ZAOT_PROJECT_NAME
      !IV_RUN_NAME type ZAOT_RUN_NAME
    returning
      value(RV_FLAG) type FLAG .
  methods LIST
    importing
      !IV_PACKAGE type DEVCLASS
    returning
      value(RT_CLASSES) type ZCL_AOT_BACKEND=>TY_CLASSES .
  methods RUN
    importing
      !IV_CLASS type SEOCLSNAME
    returning
      value(RS_RESULT) type ZCL_AOT_BACKEND=>TY_TEST_RESULT .
  methods PROJECTS_LIST
    returning
      value(RT_LIST) type ZAOT_PROJECTS_TT .
  methods PROJECT_CREATE
    importing
      !IS_DATA type ZAOT_PROJECT_DATA .
  methods PROJECT_DETAILS
    importing
      !IV_PROJECT type ZAOT_PROJECT_NAME
    returning
      value(RS_DETAILS) type ZAOT_PROJECT_DETAILS .
  methods PROJECT_RUNS
    importing
      !IV_PROJECT type ZAOT_PROJECT_NAME
    returning
      value(RT_RUNS) type ZAOT_RUNS_DETAILS_TT .
protected section.

  constants C_BASE type STRING value '/sap/zabapopentest/rest' ##NO_TEXT.
private section.
ENDCLASS.



CLASS ZCL_AOT_SERVICE_REST IMPLEMENTATION.


  METHOD list.

    rt_classes = zcl_aot_backend=>list_classes( to_upper( iv_package ) ).

  ENDMETHOD.


  METHOD projects_list.
    rt_list = zcl_aot_project_query=>list( ).
  ENDMETHOD.


  METHOD project_create.

    zcl_aot_project_query=>create( is_data ).

  ENDMETHOD.


  METHOD project_details.

    rs_details = zcl_aot_project=>get_instance( iv_project )->get_details( ).

  ENDMETHOD.


  METHOD project_runs.

    DATA(lt_runs) = zcl_aot_project=>get_instance( iv_project )->list_runs( ).

    LOOP AT lt_runs INTO DATA(ls_run).
      APPEND INITIAL LINE TO rt_runs ASSIGNING FIELD-SYMBOL(<ls_run>).
      MOVE-CORRESPONDING ls_run TO <ls_run>.

      DATA(lo_run) = zcl_aot_run=>get_instance( ls_run-run_id ).

      <ls_run>-objects = lines( lo_run->get_objects( ) ).
      <ls_run>-tests_total = lines( lo_run->get_tests( ) ).

      LOOP AT lo_run->get_tests( ) ASSIGNING FIELD-SYMBOL(<ls_test>).
        IF <ls_test>-kind IS INITIAL.
          <ls_run>-tests_success = <ls_run>-tests_success + 1.
        ELSE.
          <ls_run>-tests_failed = <ls_run>-tests_failed + 1.
        ENDIF.
      ENDLOOP.
    ENDLOOP.

  ENDMETHOD.


  METHOD run.

    rs_result = zcl_aot_backend=>run_test( iv_class ).

  ENDMETHOD.


  method RUN_DETAILS.
  endmethod.


  METHOD zif_aot_service~run.

    DATA: lo_swag TYPE REF TO zcl_swag.


    CREATE OBJECT lo_swag
      EXPORTING
        ii_server = ii_server
        iv_base   = c_base
        iv_title  = 'abapOpenTest'.
    lo_swag->register( me ).

    lo_swag->run( ).

  ENDMETHOD.


  METHOD zif_swag_handler~meta.

    FIELD-SYMBOLS: <ls_meta> LIKE LINE OF rt_meta.

    APPEND INITIAL LINE TO rt_meta ASSIGNING <ls_meta>.
    <ls_meta>-summary   = 'List Classes'(001).
    <ls_meta>-url-regex = '/auto_runner/list$'.
    <ls_meta>-method    = zcl_swag=>c_method-get.
    <ls_meta>-handler   = 'LIST'.
    APPEND 'auto_runner' TO <ls_meta>-tags.

    APPEND INITIAL LINE TO rt_meta ASSIGNING <ls_meta>.
    <ls_meta>-summary   = 'Run Test'(002).
    <ls_meta>-url-regex = '/auto_runner/run$'.
    <ls_meta>-method    = zcl_swag=>c_method-post.
    <ls_meta>-handler   = 'RUN'.
    APPEND 'auto_runner' TO <ls_meta>-tags.

*******************************

    APPEND INITIAL LINE TO rt_meta ASSIGNING <ls_meta>.
    <ls_meta>-summary   = 'List Projects'.
    <ls_meta>-url-regex = '/listProjects$'.
    <ls_meta>-method    = zcl_swag=>c_method-get.
    <ls_meta>-handler   = 'PROJECTS_LIST'.
    APPEND 'projects' TO <ls_meta>-tags.

    APPEND INITIAL LINE TO rt_meta ASSIGNING <ls_meta>.
    <ls_meta>-summary   = 'Create Project'.
    <ls_meta>-url-regex = '/createProject$'.
    <ls_meta>-method    = zcl_swag=>c_method-post.
    <ls_meta>-handler   = 'PROJECT_CREATE'.
    APPEND 'projects' TO <ls_meta>-tags.

    APPEND INITIAL LINE TO rt_meta ASSIGNING <ls_meta>.
    <ls_meta>-summary   = 'Project Details'.
    <ls_meta>-url-regex = '/projects/([\w-]+)$'.
    APPEND 'IV_PROJECT' TO <ls_meta>-url-group_names.
    <ls_meta>-method    = zcl_swag=>c_method-get.
    <ls_meta>-handler   = 'PROJECT_DETAILS'.
    APPEND 'projects' TO <ls_meta>-tags.

    APPEND INITIAL LINE TO rt_meta ASSIGNING <ls_meta>.
    <ls_meta>-summary   = 'Project Runs'.
    <ls_meta>-url-regex = '/projects/([\w-]+)/listRuns$'.
    APPEND 'IV_PROJECT' TO <ls_meta>-url-group_names.
    <ls_meta>-method    = zcl_swag=>c_method-get.
    <ls_meta>-handler   = 'PROJECT_RUNS'.
    APPEND 'projects' TO <ls_meta>-tags.

*******************************

    APPEND INITIAL LINE TO rt_meta ASSIGNING <ls_meta>.
    <ls_meta>-summary   = 'Run Details'.
    <ls_meta>-url-regex = '/projects/([\w-]+)/runs/([\w-]+)$'.
    APPEND 'IV_PROJECT' TO <ls_meta>-url-group_names.
    APPEND 'IV_RUN_NAME' TO <ls_meta>-url-group_names.
    <ls_meta>-method    = zcl_swag=>c_method-get.
    <ls_meta>-handler   = 'RUN_DETAILS'.
    APPEND 'runs' TO <ls_meta>-tags.

  ENDMETHOD.
ENDCLASS.
