export class RunDetailsPage {
  constructor(project, run) {
    this.project = project;
    this.run = run;
  }

  renderObject(object) {
    let result = "<tr>"+
      "<td><b>" + object.OBJECT_NAME + "</b></td>" +
      "<td colspan='3'><b>" + object.OBJECT_TYPE + "</b></td>"+
      "</tr>";

    for(let test of this.details.TESTS) {
      if (test.OBJECT_NAME === object.OBJECT_NAME && test.OBJECT_TYPE === object.OBJECT_TYPE) {
        let color = "red";
        if (test.KIND === "") {
          color = "green";
        }
        result = result + 
          "<tr><td></td>" +
          "<td>" + test.CLASS_NAME + "</td>" + 
          "<td>" + test.METHOD_NAME + "</td>" +
          "<td bgcolor='" + color + "'>" + test.KIND + "&nbsp;&nbsp;&nbsp;</td>" +
          "</tr>";
      }
    }

    return result;
  }

  renderDetails(details) {
    this.details = details;

    let result = "Start: " + details.RUN.START_TIME + "<br>" + 
      "End: " + details.RUN.END_TIME + "<br><br>" +
      Router.link("projects/"+this.project+"/runs/"+this.run+"/objects", "Objects") +
      "<br><br>";

    result = result + "todo, sorting<table>";
    for(let object of details.OBJECTS) {
      if (object.HAS_TESTS === "X") {
        result = result + this.renderObject(object);
      }
    }
    result = result + "</table>";

    return result;
  }

  render() {
    return "<h1>" + this.project + " - Run #" + this.run + "</h1>" +
      REST.runDetails(this.project, this.run, this.renderDetails.bind(this));
  }
}

