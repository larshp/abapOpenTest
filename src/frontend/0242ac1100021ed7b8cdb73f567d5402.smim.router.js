import {base} from './script.js';
import {ProjectPage, RunDetailsPage, NotFoundPage, StartPage} from './script.js';

export class Router {
  static initialize() {
    window.onpopstate = this.popstate;
    window.navigate = this.navigate;
  }

  static popstate(event) {
    Router.run();
  }

  static navigate(url) {
    history.pushState(null, null, base + "/" + url);
    Router.run();
  }

  static link(to, body) {
    let href = to;
    if (href==="") href = base;
    return "<a href=\""+href+"\" onclick=\"navigate('"+to+"');return false;\">"+body+"</a>";
  }

  static run() {
    if (!window.location.pathname.startsWith(base)) {
      throw "unknown url";
    }

    const path = window.location.pathname.substr(base.length);
    let page;

// todo, replace this with some kind of configuration
    if (path === "" || path === "/") {
      page = new StartPage();
    }

    let result = path.match(/\/projects\/(\w+)$/);
    if (result) {
      page = new ProjectPage(result[1]);
    }

    result = path.match(/\/projects\/(\w+)\/runs\/(\w+)$/);
    if (result) {
      page = new RunDetailsPage(result[1], result[2]);
    }

    if (!page) {
      page = new NotFoundPage();
    }

    if (page instanceof StartPage) {
      document.getElementById("app").innerHTML = page.render();
    } else {
      document.getElementById("app").innerHTML = this.renderHeader() + page.render() + this.renderFooter();
    }
  }

  static renderHeader() {
    return this.link("", "abapOpenTest") +" > breadcrumb <hr>";
  }

  static renderFooter() {
    return "<hr>footer";
  }
}
