export class ObjectPage {
  constructor(project, run, type, name) {
    this.project = project;
    this.run = run;
    this.type = type;
    this.name = name;
  }

  renderObject(details) {
    console.dir(details);

    let result = "";

    result = result + "<table>";
    for(let block of details.BLOCKS) {
      let index = 0;
      for(let line of block.SOURCE) {
        index++;
        let code = line.LINE.replace(/\</g, "&lt;").replace(/\>/g, "&gt;");
        result = result + "<tr><td>" + index + "</td>" +
          "<td nowrap><pre>"+ code + "</pre></td>" + 
          "<td nowrap>";
        for(let coverage of block.COVERAGE) {
          let covering = false;
          for(let meta of coverage.META) {
            if(meta.ROW === index && meta.COLOR === 102) {
              covering = true;
              break;
            } 
          }
          if(covering === true) {
            result = result + coverage.CLASS_NAME + "&nbsp;&nbsp;";
          }
        }
        result = result + "</td></tr>";
      }
      result = result + "<tr><td>&nbsp;</td><td></td><td></td></tr>";
    }
    return result + "</table>";
  }

  render() {
    return "<h1>" + this.name + " " + this.type + "</h1>"+
      REST.objectDetails(this.project, this.run, this.type, this.name, this.renderObject.bind(this));
  }
}

